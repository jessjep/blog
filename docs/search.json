[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Jessica Moore",
    "section": "",
    "text": "Tidy Tuesday: Scotland’s Munros\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Project Gutenberg\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: D&D Monsters\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: 420 Data\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Pokemon\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Amazon’s Annual Reports\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Palm Trees\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Pixar Films\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Long Beach Animal Rescue\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Racial Disparities\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: FBI Crime Data API\n\n\n\n\n\n\n\n\n\n\n\n\n\nTableau Chess Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: CDC Datasets\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: The Simpsons\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Water Insecurity\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoodreads Genres\n\n\n\n\n\n\n\n\n\n\n\n\n\nChess Federations\n\n\n\n\n\n\n\n\n\n\n\n\n\nProportion of Women in Chess\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/tableau-chess/2025-02-19-tableau-chess.html",
    "href": "posts/tableau-chess/2025-02-19-tableau-chess.html",
    "title": "Tableau Chess Dashboard",
    "section": "",
    "text": "One of my first finished Tableau visualisations can be viewed here (best viewed on a large screen). I am finding the FIDE chess player data to be a really great source for data exploration, so I looked at another (more traditional) way to visualise the chess federations - as opposed to my creative visualisation here.\nI wanted to do a lot more with this; specifically, I wanted to animate it by date to show the change over time. This was easy enough to achieve, however, achieving the dynamic sorting (from most to least, changing by year) of the bar charts was not so easy, and something I’ll have to play around with a little more."
  },
  {
    "objectID": "posts/Chess Federations/chess-feds.html",
    "href": "posts/Chess Federations/chess-feds.html",
    "title": "Chess Federations",
    "section": "",
    "text": "I created this graphic as my final project for the Domestika course “Creative Data Visualization for Narrative Designs” by Federica Fragapane. I created bubble plots and violin plots in R, which I combined and edited for the final visualisation using Inkscape."
  },
  {
    "objectID": "posts/tidy_tues/simpsons/2025-02-07-simpsons.html",
    "href": "posts/tidy_tues/simpsons/2025-02-07-simpsons.html",
    "title": "Tidy Tuesday: The Simpsons",
    "section": "",
    "text": "Week 5 of Tidy Tuesday 2025 looks at data from The Simpsons, season 21 onwards. I created the plot using R and edited it using Adobe Illustrator.\n\nThe colours were chosen to reflect the show. I prefer a darker, less saturated version:\n\nCode: github.com/jessjep/tidytuesday/blob/main/2025/04-02-25/tidy_tues_simpsons/code.R"
  },
  {
    "objectID": "posts/tidy_tues/cdc-datasets/2025-02-11-cdc-datasets.html",
    "href": "posts/tidy_tues/cdc-datasets/2025-02-11-cdc-datasets.html",
    "title": "Tidy Tuesday: CDC Datasets",
    "section": "",
    "text": "Week 6 of Tidy Tuesday 2025 looks at CDC datasets that have been backed up on archive.org during the Trump administration purge. I made an effort to edit the visuals of this one using R alone, without relying on Illustrator to fix font and alignment issues.\n\nCode: https://github.com/jessjep/tidytuesday/blob/main/2025/11-02-25/tt_cdc/treemap2.R"
  },
  {
    "objectID": "posts/tidy_tues/pixar/2025-03-16-pixar.html",
    "href": "posts/tidy_tues/pixar/2025-03-16-pixar.html",
    "title": "Tidy Tuesday: Pixar Films",
    "section": "",
    "text": "Week 10 of Tidy Tuesday used data from the {pixar} package. There were some incorrect run times so my initial plot was a little off. This is the updated version.\nCould be fun to revisit this one and add some more playful elements in Illustrator—like using balloons with string for the segments and points.\n\nCode: https://github.com/jessjep/tidytuesday/blob/main/2025/11-03-25/pixar.R"
  },
  {
    "objectID": "posts/tidy_tues/palmtrees/2025-03-19-palms.html",
    "href": "posts/tidy_tues/palmtrees/2025-03-19-palms.html",
    "title": "Tidy Tuesday: Palm Trees",
    "section": "",
    "text": "Week 11 of Tidy Tuesday used data from the {palmtrees} package. Such an interesting dataset with so many options to explore.\nI find dendrograms confusing, so I followed this helpful post to help me create it: https://paulapivat.com/technical_notes/example_tech/data_viz_tip1/.\n\n\nCode\n\n\nLoad Data and Libraries\npalmtrees &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-03-18/palmtrees.csv')\n\nlibrary(tidyverse)\nlibrary(igraph)\nlibrary(tidygraph)\nlibrary(ggraph)\nlibrary(ggtext)\nlibrary(sysfonts)\nlibrary(showtext)\n\n\n\n\nWrangle the Data\n# turn the data into a format suitable for dendrograms #\npalms &lt;- palmtrees %&gt;%\n  group_by(palm_subfamily) %&gt;%\n  arrange(palm_subfamily) %&gt;%\n  mutate(level1 = \"palmcenter\",\n         level2 = palm_subfamily,\n         level3 = palm_tribe,\n         level4 = spec_name) %&gt;%\n  ungroup() %&gt;%\n  select(level1:level4)\n\n# create the edges #\npalms_edges_1_2 &lt;- palms %&gt;%\n  select(level1, level2) %&gt;%\n  unique() %&gt;%\n  rename(from = level1, to = level2) %&gt;%\n  mutate(subfam = to) # adding this column for colour grouping\n\npalms_edges_2_3 &lt;- palms %&gt;%\n  select(level2, level3) %&gt;%\n  unique() %&gt;%\n  rename(from = level2, to = level3) %&gt;%\n  mutate(subfam = from) # adding this column for colour grouping\n\npalms_edges_3_4 &lt;- palms %&gt;%\n  select(level2, level3, level4) %&gt;%\n  unique() %&gt;%\n  rename(from = level3, to = level4) %&gt;%\n  mutate(subfam = level2) %&gt;% # adding this column for colour grouping\n  select(-level2) \n\nedge_list &lt;- rbind(palms_edges_1_2, palms_edges_2_3, palms_edges_3_4)\n\npalms_plot &lt;- graph_from_data_frame(edge_list) %&gt;%\n  as_tbl_graph()\n\n\n\n\nDefine Fonts, Text, and Colours\nfont_add_google(\"Milonga\", \"milonga\")\nfont_add_google(\"Kurale\", \"kurale\")\nft &lt;- \"milonga\"\nft2 &lt;- \"kurale\"\nshowtext_auto()\n\ntitle &lt;- \"Palm Trees\"\nsubtitle &lt;- \"Over 2,500 species of palms exist worldwide, categorized into 29 tribes across\n5 subfamilies: &lt;span style = 'color: #04724d;'&gt;**Arecoideae**&lt;/span&gt;, &lt;span style = 'color: #74a57f;'&gt;**Calamoideae**&lt;/span&gt;, &lt;span style = 'color: #06AD81;'&gt;**Ceroxyloideae**&lt;/span&gt;, &lt;span style = 'color: #4c934c;'&gt;**Coryphoideae**&lt;/span&gt;, and &lt;span style = 'color: #b7ce63;'&gt;**Nypoideae**&lt;/span&gt;.\\n\nIn this diagram, the leaves are made up of thousands of lines, each representing a species of palm.\nEach leaf represents a palm tribe, and each colour a subfamily.\"\ncaption &lt;- \"Created by: jessimoore.bsky.social   Source: {palmtrees}\"\n\nc &lt;- c(\"#04724d\", \"#74a57f\", \"#06AD81\",\n       \"#4c934c\", \"#b7ce63\")\n\n\n\n\nCreate the Plot\npalmtree &lt;- ggraph(palms_plot, layout = \"dendrogram\", circular = TRUE) +\n  geom_edge_arc(aes(width = after_stat(index), edge_colour = subfam)) +\n  scale_edge_color_manual(values = c) +\n  scale_edge_width(range = c(1,0.2)) +\n  theme_void() +\n  labs(title = title, subtitle = subtitle, caption = caption) +\n  theme(panel.background = element_rect(fill = \"#d7fff1\", color = NA),\n        plot.background = element_rect(fill = \"#d7fff1\", color = NA),\n        plot.title = element_text(family = ft, size = 34, hjust = 0.5),\n        plot.subtitle = element_textbox_simple(family = ft2, size = 10, \n                                               hjust = 0.5, halign = 0.5,\n                                               margin = margin(15,0,0,0)),\n        plot.caption = element_text(family = ft2, size = 8, hjust = 0.5),\n        plot.caption.position = \"plot\",\n        legend.position = \"none\",\n        plot.margin = margin(20,20,20,20))"
  },
  {
    "objectID": "posts/goodreads-genres/2025-01-08-goodreads-genres.html",
    "href": "posts/goodreads-genres/2025-01-08-goodreads-genres.html",
    "title": "Goodreads Genres",
    "section": "",
    "text": "I was interested in whether particular book genres are more highly rated by readers than others. Based on my experience on the Goodreads website, I was expecting to see very high ratings for fantasy and young adult books, which are quite popular. I had a lot of fun making this and learning how to webscrape with the rvest package (Goodreads’ API is no longer available). I took data only from the 50 most shelved books per the selected genres, so this may have influenced the results.\n\nI chose to separate high fantasy and “romantasy” somewhat arbitrarily based on my own opinion that they attract quite different followings. However, there may be quite a bit of overlap between the two.\nI performed a Welch’s one-way ANOVA and Games-Howell post-hoc test to determine whether significant differences existed between the genres’ average ratings (the assumption of homogeneity of variances was not met for a regular ANOVA).\nHigh fantasy was more highly rated than all other genres (except romantasy). Romantasy was more highly rated than everything except for science fiction and young adult (and high fantasy). Science fiction was more highly rated than the classics."
  },
  {
    "objectID": "posts/tidy_tues/fbi-crime-api/2025-02-20-fbi_crime_api.html",
    "href": "posts/tidy_tues/fbi-crime-api/2025-02-20-fbi_crime_api.html",
    "title": "Tidy Tuesday: FBI Crime Data API",
    "section": "",
    "text": "Week 7 of Tidy Tuesday 2025 looks at data from the FBI Crime API. The following plot visualises the dates when crime agencies around the USA adopted the National Incident-Based Reporting System, which collects crime data in much greater detail than the original Summary Reporting System (SRS).\n\nCode: https://github.com/jessjep/tidytuesday/blob/main/2025/18-02-25/fbi_crime_data/nibrs_start_date.R"
  },
  {
    "objectID": "posts/tidy_tues/long-beach/2025-03-04-long-beach.html",
    "href": "posts/tidy_tues/long-beach/2025-03-04-long-beach.html",
    "title": "Tidy Tuesday: Long Beach Animal Rescue",
    "section": "",
    "text": "Code: https://github.com/jessjep/tidytuesday/blob/main/2025/03-03-25/surrenders2.R"
  },
  {
    "objectID": "posts/tidy_tues/racial-disparities/2025-02-27-racial-disparities.html",
    "href": "posts/tidy_tues/racial-disparities/2025-02-27-racial-disparities.html",
    "title": "Tidy Tuesday: Racial Disparities",
    "section": "",
    "text": "Week 8 of Tidy Tuesday shows some concerning trends from reproductive medicine research findings in the US.\n\nCode: https://github.com/jessjep/tidytuesday/blob/main/2025/24-02-25/disparities.R"
  },
  {
    "objectID": "posts/tidy_tues/water-insecurity/2025-02-01-water-insecurity.html",
    "href": "posts/tidy_tues/water-insecurity/2025-02-01-water-insecurity.html",
    "title": "Tidy Tuesday: Water Insecurity",
    "section": "",
    "text": "My submission for week 4 of Tidy Tuesday, 2025 - an enhanced dumbbell plot. My code for the initial plot, created in R, is detailed below the image.\n\nR Code: \n\n# load packages:\n\nlibrary(forcats)\nlibrary(dplyr)\n\n# load the data:\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, week = 4)\n\nwater_insecurity_2022 &lt;- tuesdata$water_insecurity_2022\nwater_insecurity_2023 &lt;- tuesdata$water_insecurity_2023\n\n# organise the data:\n\nwater_ins_22 &lt;- water_insecurity_2022 %&gt;% \n  separate_wider_delim(name, \", \", names = c(\"county\", \"state\")) %&gt;% \n  group_by(state) %&gt;% \n  summarise(avg_pct = mean(percent_lacking_plumbing), \n            people_lacking_plumbing = sum(plumbing)) %&gt;% \n  mutate(year = 2022)\n\nwater_ins_23 &lt;- water_insecurity_2023 %&gt;%\n  separate_wider_delim(name, \", \", names = c(\"county\", \"state\")) %&gt;% \n  group_by(state) %&gt;% \n  summarise(avg_pct = mean(percent_lacking_plumbing), \n            people_lacking_plumbing = sum(plumbing)) %&gt;% \n  mutate(year = 2023)\n\nwater_ins &lt;- bind_rows(water_ins_22, water_ins_23) %&gt;% \n  group_by(state) %&gt;% \n  mutate(pct_diff = avg_pct[year==2022] - avg_pct[year==2023]) %&gt;% \n  drop_na() %&gt;% \n  mutate(gradient = sqrt(avg_pct)) \n\nsegment &lt;- water_ins %&gt;% # used to create the segments on the plot \n  select(state, avg_pct, year) %&gt;% \n  pivot_wider(names_from = year, values_from = avg_pct) %&gt;% \n  rename(avg_pct_22 = \"2022\", \n         avg_pct_23 = \"2023\")\n\n\n# create the plot:\n\np &lt;- ggplot() + \\\\\n  geom_segment(data = segment,\n               aes(x = state, y = avg_pct_22,\n                   yend = avg_pct_23, color = avg_pct_23),\n               alpha = 0.8, size = 0.6) +\n  geom_point(data = water_ins %&gt;% filter(year == 2023),\n             aes(y = avg_pct, x = fct_reorder(state, pct_diff),\n                 color = gradient,\n                 size = people_lacking_plumbing,\n                 ), shape = 17, alpha = 0.6) +\n  geom_point(data = water_ins %&gt;% filter(year == 2022),\n             aes(y = avg_pct, x = fct_reorder(state, pct_diff),\n                 color = gradient,\n                 size = people_lacking_plumbing),\n             alpha = 0.6) +\n  scale_color_gradient2(low = \"#3f88c5\",\n                        mid = \"#edae49\",\n                        high = \"#d1495b\",\n                        midpoint = 0.5) +\n  scale_y_sqrt() +\n  guides(alpha = \"none\") +\n  coord_flip() +\n  labs(y = \"% of Population Lacking Plumbing Facilities\",\n       x = NULL,\n       size = \"Population Lacking \\n Plumbing Facilities\",\n       title = \"Water Insecurity in the United States\") +\n  theme_light() + \\\\\n  theme(legend.position = \"bottom\")\np\n\n# from here, I edited the plot in Illustrator."
  },
  {
    "objectID": "posts/chess1/2024-10-25-chess1.html",
    "href": "posts/chess1/2024-10-25-chess1.html",
    "title": "Proportion of Women in Chess",
    "section": "",
    "text": "I was interested in plotting the proportion of male and female chess players over time. The following plots were created using FIDE player data and therefore only show the trend in players who have an official FIDE standard rating.\n\n\n\n\n\n\n\nThe number of chess players registered with FIDE has more than tripled since 2012. Female players coninue to make up about one in ten, a proportion that has not changed over the years.\nWhen filtering to only ‘active’ players – those who have played in a tournament in the previous 12 months – the proportion is similar:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLooking at these numbers by age group, we can see that around half of female chess players are under the age of 18, compared to around a quarter of males. This is unsurprising, and consistent with the understanding that girls tend to drop out of chess much sooner than boys.\n\n\n\n\n\n\n\nHow has the number of girls participating in chess tournaments changed over the last decade? Well, there has been a small increase, but boys still outnumber them by more than three to one:\n\n\n\n\n\n\n\n\nRecommended reading:\nGender Differences: The Chess Delusion\nChecking Gender Bias: Parents and Mentors Perceive Less Chess Potential in Girls"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome 👋",
    "section": "",
    "text": "I’m developing my skills in data visualisation and analysis. This is a platform for me to share my various personal projects all in one place.\nContact me at: jessicamoore.tn@gmail.com\n\n\n\n\n\n\nLatest post\n\n\n\n\n\n\n\n\n\nTidy Tuesday posts\n\n\n\n\n\n\n\n\n\nChess posts"
  },
  {
    "objectID": "posts/tidy_tues/amazon/amazon.html",
    "href": "posts/tidy_tues/amazon/amazon.html",
    "title": "Tidy Tuesday: Amazon’s Annual Reports",
    "section": "",
    "text": "This week’s data was curated by Gregory Vander Vinne. I used the lead() function from dplyr to look at the ‘next’ word and create and investigate trigrams, rather than single words.\n“Stock based compensation” was by far the most common trigram. However, it has been mentioned less and less since 2015.\n\n\nCode:\n\n\nLoad Data and Libraries\ntuesdata &lt;- tidytuesdayR::tt_load(2025, week = 12)\nreport_words_clean &lt;- tuesdata$report_words_clean\n\nlibrary(tidytext)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(sysfonts)\nlibrary(showtext)\n\n\n\n\nReverse Engineer Trigrams and Look at the Most Common\ntrigrams &lt;- report_words_clean %&gt;%\n  mutate(word2 = lead(word),\n         word3 = lead(word2))\n\n# common trigrams #\ntri &lt;- trigrams %&gt;%\n  filter(!(word == word2),\n         !(word2 == word3),\n         !(word == word3)) %&gt;%\n  unite(trigram, c(\"word\", \"word2\", \"word3\"), sep = \" \") %&gt;%\n  group_by(year) %&gt;%\n  count(trigram, sort = TRUE) %&gt;%\n  slice_max(n, n = 10) \n# this reveals \"stock based compensation\" and \"foreign exchange rates\" as common trigrams\n\n\n\n\nPrepare for Plotting\ntri_graph &lt;- trigrams %&gt;%\n  group_by(year) %&gt;%\n  unite(trigram, c(\"word\", \"word2\", \"word3\"), sep = \" \") %&gt;%\n  mutate(total_trigrams = n()) %&gt;%\n  filter(trigram %in% c(\"stock based compensation\", \"foreign exchange rates\")) %&gt;%\n  count(year, total_trigrams, trigram) %&gt;%\n  mutate(relative_freq = n/total_trigrams*100)\n\n# fonts and text #\nt &lt;- \"Term Frequency in Amazon's Annual Reports\"\nst &lt;- \"The graph shows the relative term frequency of the trigrams 'stock based compensation' and 'foreign exchange rates' in Amazon's Annual Reports. \nThis is is expressed as a percentage of the total number of trigrams in each report. Mentions of 'stock based compensation' have declined significantly \nsince 2005. Meanwhile, mentions of 'foreign exchange rates' have been rising.\"\ncptn &lt;- \"Created by: jessimoore.bsky.social    Source: Amazon's Annual Reports\"\n\nfont_add_google(\"Roboto\", \"robo\")\nft &lt;- \"robo\"\nshowtext_auto()\n\n\n\n\nCreate the Plot\nplot &lt;- ggplot(tri_graph, aes(x = year, y = relative_freq, color = trigram)) +\n  geom_line(size = 1.5) +\n  annotate(\"text\", x = 2016, y = 0.25, label = '\"stock based compensation\"', \n            color = \"#4e598c\", fontface = \"bold\", family = ft, angle = -30) +\n  annotate(\"text\", x = 2006.2, y = 0.297, label = \"68 mentions\", \n           color = \"#4e598c\", family = ft) +\n  annotate(\"text\", x = 2022, y = 0.07, label = \"19 mentions\", \n           color = \"#4e598c\", family = ft) +\n  annotate(\"text\", x = 2014, y = 0.107, label = '\"foreign exchange rates\"',\n            color = \"#f9c784\", fontface = \"bold\", family = ft, angle = 42) +\n  annotate(\"text\", x = 2006, y = 0.03, label = \"5 mentions\", \n           color = \"#f9c784\", family = ft) +\n  annotate(\"text\", x = 2022, y = 0.128, label = \"31 mentions\", \n           color = \"#f9c784\", family = ft) +\n  labs(title = t, subtitle = st, caption = cptn,\n       x = NULL, y = \"%\") +\n  scale_color_manual(values = c(\"#f9c784\", \"#4e598c\")) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        panel.grid = element_blank(),\n        axis.text = element_text(family = ft, size = 10),\n        axis.title.y = element_text(family = ft, size = 18,\n                                    angle = 0, vjust = 0.5),\n        plot.title = element_text(family = ft, size = 25, hjust = 0.5),\n        plot.subtitle = element_text(family = ft, size = 10, hjust = 0.5,\n                                     margin = margin(10,0,20,0)),\n        plot.caption = element_text(family = ft, size = 8, \n                                    hjust = 0.5, vjust = -15),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(30,30,40,30))"
  },
  {
    "objectID": "posts/tidy_tues/pokemon/pokemon.html",
    "href": "posts/tidy_tues/pokemon/pokemon.html",
    "title": "Tidy Tuesday: Pokemon",
    "section": "",
    "text": "This week’s Tidy Tuesday used data from the {pokemon} package. I wanted to keep it quick and do something more creative - more like data art than data visualisation. Playing around with the {waffle} package, I used the radius function of geom_waffle() to create some interesting effect.\nInitially, I’d thought that the colours in the data set were specific to each pokemon, which I thought would make for a very pretty and colourful waffle plot. However, I realised that the colours were specific to type only. So I ended up grouping the colours for a slightly more informative plot.\nI tried ordering each row by various stats (e.g. hp, attack, speed) to see if any interesting trend could be gleaned by the patterns of colour, but these all appeared fairly random. I’ve included a couple below anyway as I think they’re quite mesmerising!\n\nCode:\n\n\nCode\ntuesdata &lt;- tidytuesdayR::tt_load(2025, week = 13)\npokemon_df &lt;- tuesdata$pokemon_df\n\nlibrary(tidyverse)\nlibrary(waffle)\nlibrary(forcats)\n\npok &lt;- pokemon_df %&gt;%\n  drop_na(generation_id) %&gt;%\n  mutate(generation_id = factor(generation_id)) %&gt;%\n  group_by(generation_id) %&gt;%\n  arrange(generation_id, color_1) %&gt;%\n  mutate(pokemon = fct_reorder(factor(pokemon), type_1)) %&gt;%\n  mutate(type_1 = factor(toupper(type_1))) %&gt;%\n  ungroup()\n\n\ncolors &lt;- pok %&gt;%\n  distinct(type_1, color_1) %&gt;%\n  deframe()\n\nt &lt;- \"POKEMON TYPES AND COLORS\"\nst &lt;- \"Each row represents a generation, from Gen 1 (top) to Gen 7 (bottom).\"\ncptn &lt;- \"Created by jessimoore.bsky.social      Source: {pokemon}\"\n\nlibrary(sysfonts)\nlibrary(showtext)\n\nfont_add_google(\"Delius\", \"delius\")\nft &lt;- \"delius\"\nshowtext_auto()\n\nplot &lt;- ggplot(pok, aes(fill = type_1, values = 1)) +\n  geom_waffle(n_rows = 1, color = \"white\",\n              radius = grid::unit(2.5, \"npc\")) +\n  scale_fill_manual(values = colors) +\n  scale_y_continuous(expand = c(0,0)) +\n  facet_wrap(~generation_id, ncol = 1,\n             scales = \"free_x\") +\n  guides(fill = guide_legend(title =\"Type (1)\", \n                             position = \"bottom\", nrow = 2)) +\n  labs(title = t, subtitle = st, caption = cptn) +\n  theme_void() +\n  theme(plot.title = element_text(family = ft, size = 16, hjust = 0.5),\n        plot.subtitle = element_text(family = ft, size = 12, hjust = 0.5, margin = margin(10,10,10,10)),\n        plot.caption = element_text(family = ft, size = 9, hjust = 0.5, vjust = -5),\n        legend.text = element_text(family = ft, size = 10),\n        legend.title = element_text(family = ft, size = 12),\n        plot.caption.position = \"panel\",\n        strip.text = element_blank(),\n        panel.spacing = unit(0,'lines'),\n        plot.margin = margin(40,40,40,40),\n        legend.box.margin = margin(20,0,0,0))\n\n\nThe plot below is ordered by descending hp, from left to right:\n\nAnd this final plot is ordered alphabetically (left to right) by pokemon name:"
  },
  {
    "objectID": "posts/tidy_tues/420/420.html",
    "href": "posts/tidy_tues/420/420.html",
    "title": "Tidy Tuesday: 420 Data",
    "section": "",
    "text": "Week 16 of Tidy Tuesday looks at data on fatal car accidents in the USA and whether more deaths occur on 20th of April (the 420 Cannabis holiday). I made a line plot showing the change in number of fatalities over time, and decided to emphasise the seasonality by adding a colour gradient to the trend line.\n\nI discovered that geom_smooth() does not support gradients, but you can get around this by manually creating the loess (locally estimated scatterplot smoothing) using l &lt;- loess(fatalities_count ~ as.numeric(date), data = daily_accidents, span = 0.02). This can be added as a variable in the data frame using mutate(smooth = predict(l)) and then plotted as a normal geom_line() in ggplot2.\nTo change the colour of the line, I specified geom_line(aes(y = smooth, color = months, group = 1)). Having group = 1 tells ggplot2 that I only want one line with multiple colours, rather than multiple lines each with their own colour. Then, scale_color_gradientn() is used to add the colours.\nThe full code is below.\n\n\nCode\ntuesdata &lt;- tidytuesdayR::tt_load(2025, week = 16)\ndaily_accidents &lt;- tuesdata$daily_accidents\ndaily_accidents_420 &lt;- tuesdata$daily_accidents_420\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\nl &lt;- loess(fatalities_count ~ as.numeric(date), data = daily_accidents, span = 0.02)\n\naccidents2 &lt;- daily_accidents %&gt;%\n  mutate(smooth = predict(l),\n         months = lubridate::month(date)) %&gt;%\n  arrange(date)\n\nt &lt;- \"Car Accident Fatalities in the USA: 1992–2017\"\nst &lt;- glue::glue(\"The grey line shows the daily number of fatalities, with the most deaths occuring on 3 November 2007, and the fewest on 2 February 2011.\n                 The trend is displayed as a gradient-colored line showing the seasonality of fatal car crashes.\")\ncptn &lt;- \"Created by: jessimoore.bsky.social    Source: 420 Data, Harper & Palayew (2018)\"\n\np2 &lt;- ggplot(accidents2, \n             aes(x = date)) +\n  geom_line(aes(y = fatalities_count),\n            alpha = 0.2, linetype = \"dotted\",\n            color = \"grey40\") +\n  geom_line(aes(y = smooth, \n                color = months,\n                group = 1), \n            linewidth = 1.5) +\n  scale_color_gradientn(colors = c(\"#90caf9\",\"#f3722c\",\"#ffc400\",\"#90be6d\", \"#90caf9\"),\n                        values = scales::rescale(c(1,3.5,6,9,12)),\n                        labels = c(\"January\", \"March\", \"June\", \"September\", \"December\"),\n                        transform = \"reverse\") +\n  scale_x_date(date_breaks = \"3 years\", date_minor_breaks = \"6 months\",\n               date_labels = \"%Y\") +\n  labs(x = NULL, y = \"Fatalities\",\n       color = NULL,\n       title = t, subtitle = st, caption = cptn) +\n  theme_minimal() +\n  theme(panel.grid = element_line(linewidth = 0.15),\n        panel.grid.major.x = element_line(linewidth = 0.2, \n                                          color = \"grey60\"),\n        plot.margin = margin(30,30,30,30),\n        plot.caption = element_text(size = 8, hjust = 0.5, vjust = -15),\n        plot.caption.position = \"plot\")"
  },
  {
    "objectID": "posts/tidy_tues/dnd-monsters/monsters.html",
    "href": "posts/tidy_tues/dnd-monsters/monsters.html",
    "title": "Tidy Tuesday: D&D Monsters",
    "section": "",
    "text": "Here is my submission for week 21 of Tidy Tuesday. I made an interactive scatter plot showing the relationship between strength and intelligence of D&D monsters, by their alignment. I also mapped point size to the size of the monster and point colour to type of monster.\nEdit: I’ve updated the code since posting to address some feedback about poor readability and the alignment chart axes.\nThe code is not-so-tidy but can be seen below.\n\n\nLoad libraries and tidy data\nlibrary(ggiraph)\nlibrary(tidyverse)\nlibrary(sysfonts)\nlibrary(showtext)\nlibrary(ggplot2)\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, week = 21)\nmonsters &lt;- tuesdata$monsters\n\nmonsters2 &lt;- monsters %&gt;%\n  mutate(size = case_match(size,\n                           \"Tiny\" ~ 1,\n                           \"Small\" ~ 3,\n                           \"Medium or Small\" ~ 3,\n                           \"Medium\" ~ 3,\n                           \"Large\" ~ 4.5,\n                           \"Huge\" ~ 7,\n                           \"Gargantuan\" ~ 10)) %&gt;%\n  filter(alignment != \"Unaligned\")\n\n\n\n\nDefine aesthetics\npalette &lt;- c(\n  \"Aberration\"           = \"#7A4DA1\",\n  \"Celestial\"            = \"#F1F1C0\",\n  \"Construct\"            = \"#2C2A8C\",\n  \"Dragon\"               = \"#FF6E27\",\n  \"Elemental\"            = \"#53A6D8\",\n  \"Fey\"                  = \"#C88BCE\",\n  \"Fiend\"                = \"#D35445\",\n  \"Giant\"                = \"#BC5A89\",\n  \"Humanoid\"             = \"#45B1C6\",\n  \"Monstrosity\"          = \"#E0B329\",\n  \"Plant\"                = \"#4C8B7D\",\n  \"Swarm of Tiny Undead\" = \"#30BEB1\",\n  \"Undead\"               = \"#89D1A1\"\n)\n\nbackground &lt;- \"#1E1E1E\"\ntitle &lt;- \"Monsters of Dungeons & Dragons\"\ncaption &lt;- \"Created by @jessimoore.bsky.social, Source: DnD System Reference Document v5.2.1\"\n\n\nfont_add_google(\"Tangerine\", \"Tangerine\")\nfont_add_google(\"EB Garamond\", \"EB Garamond\")\nfont &lt;- \"Tangerine\"\nfont2 &lt;- \"EB Garamond\"\nshowtext_auto()\n\nhover_css &lt;- \"cursor:pointer; \nfilter: brightness(1.2) drop-shadow(0px 0px 2px rgba(47, 35, 41, 0.2));\nstroke-width:4;\nr:4px;\ntransition: all 0.3s ease;\"\n\ntooltip_css &lt;- \"color:white;\npadding:5px;\nborder-radius:3px;\nfont-size:16px;\nfont-family: 'EB Garamond';\"\n\n\n\n\nCreate plot\np &lt;- ggplot(monsters2, aes(str, int, tooltip = name)) +\n  geom_point_interactive(aes(size = size, colour = type), alpha = 0.6) +\n  scale_color_manual(values = palette) +\n  scale_size_identity(guide = \"legend\",\n                      breaks = c(1, 3, 4.5, 7, 10),\n                      labels = c(\"Tiny\", \"Small or Medium\", \"Large\", \"Huge\", \"Gargantuan\")) +\n  guides(color = guide_legend(override.aes = list(size = 4)),\n         size = guide_legend(override.aes = list(color = \"#EDEDED\", alpha = 1))) +\n  facet_wrap_interactive(\n    ~factor(alignment, levels = c(\n      \"Lawful Good\", \"Neutral Good\", \"Chaotic Good\",\n      \"Lawful Neutral\", \"Neutral\", \"Chaotic Neutral\",\n      \"Lawful Evil\", \"Neutral Evil\", \"Chaotic Evil\")),\n    nrow = 3, ncol = 3, scales = \"fixed\") +\n  labs(title = title, colour = \"Type\", size = \"Size\", caption = caption,\n       x = \"Strength\", y = \"Intelligence\") +\n  theme(plot.background = element_rect(fill = background),\n        panel.background = element_rect(fill = background),\n        legend.background = element_rect(fill = background),\n        text = element_text(family = font2, colour = \"#EDEDED\", size = 16),\n        plot.title = element_text(size = 58, family = font, face = \"bold\",\n                                  hjust = 0.5, margin = margin(0,0,25,0)),\n        plot.title.position = \"plot\",\n        plot.caption = element_text(size = 12, hjust = 0.5, margin = margin(40,0,0,0)),\n        plot.caption.position = \"plot\",\n        axis.title = element_text(size = 36, family = font, face = \"bold\"),\n        legend.title = element_text(size = 32, family = font, face = \"bold\"),\n        legend.text = element_text(size = 18, family = font2),\n        axis.text = element_text(size = 14, color = \"#EDEDED\"),\n        panel.grid = element_line(colour = \"#454e54\", linetype = \"dashed\"),\n        strip.background = element_rect(fill = \"#444444\"),\n        strip.text = element_text(face = \"bold\", color = \"#EDEDED\", size = 16),\n        plot.margin = margin(30,30,30,30))\n\n\n\n\nMake it interactive\ninteractive_plot &lt;- girafe(ggobj = p, width_svg = 10, height_svg = 10) # needed to experiment with the size\nint_plot &lt;- girafe_options(interactive_plot, opts_hover(css = hover_css),\n                         opts_tooltip(css = tooltip_css, use_fill = TRUE))\nint_plot\n\n\n\n\n\n\nSome observations:\n\nStrength and intelligence appear to correlate more for lawful or chaotic monsters than neutral monsters\nHumanoids are mostly true neutral\nDragons can be good or evil, but are rarely neutral\nNeutral monsters tend to be smaller"
  },
  {
    "objectID": "posts/tidy_tues/projgutenberg/pgutenberg.html",
    "href": "posts/tidy_tues/projgutenberg/pgutenberg.html",
    "title": "Tidy Tuesday: Project Gutenberg",
    "section": "",
    "text": "Tidy Tuesday week 22 - quick bar plot this week. Project Gutenberg is a free ebook library of many classic novels and works of literature. I chose to look at the authors with works in the most languages (the top 25 are shown in the plot).\nI used the Wall Street Journal theme from {ggthemes} and the Manu::Kereru palette from {paletteer}. While I really love customising fonts and colours myself, it sure does save time to use some premade themes. I also used AI to help rearrange the first and surnames of the authors (i.e. from “Shakespeare, William” to “William Shakespeare”). I don’t typically like to use AI as I think it interferes with learning and retaining knowledge, but sometimes it’s simply faster.\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(paletteer)\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, week = 22)\n\ngutenberg_authors &lt;- tuesdata$gutenberg_authors %&gt;%\n  arrange(author, birthdate) %&gt;%\n  distinct(author, .keep_all = TRUE)\ngutenberg_languages &lt;- tuesdata$gutenberg_languages\ngutenberg_metadata &lt;- tuesdata$gutenberg_metadata\ngutenberg_subjects &lt;- tuesdata$gutenberg_subjects\n\n# number of distinct languages per author #\n\ntranslated &lt;- gutenberg_metadata %&gt;%\n  distinct(author, language) %&gt;%\n  count(author) %&gt;%\n  filter(!(author %in% c(NA, \"Anonymous\", \"Various\", \"Unknown\"))) %&gt;%\n  slice_max(order_by = n, n = 20)\n\nt &lt;- translated %&gt;%\n  left_join(gutenberg_authors %&gt;%\n            select(author, birthdate, deathdate),\n    by = \"author\") %&gt;%\n  separate(author, into = c(\"surname\", \"firstname\"), \n           sep = \",\", fill = \"right\") %&gt;%\n  mutate(firstname = str_trim(firstname),\n         surname = str_trim(surname),\n         author = if_else(is.na(firstname), surname, \n                          paste(firstname, surname))) %&gt;%\n  mutate(birthdate = if_else(author == \"Daniel Defoe\", 1660, birthdate),\n    deathdate = if_else(author == \"Daniel Defoe\", 1731, deathdate)) %&gt;%\n  select(-c(firstname, surname)) %&gt;%\n  mutate(active = (deathdate + birthdate)/2,\n    century = factor(case_when(\n      is.na(active) ~ \"Unknown\",\n      TRUE ~ paste0((birthdate %/% 100 + 1), \"th century\"))),\n      author = fct_reorder(factor(author), n)) %&gt;%\n  mutate(century = if_else(author == \"Homer\", \"8th century BCE\", century))\n\n# plot #\n\np &lt;- ggplot(t, aes(author, n, fill = century)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(title = \"Project Gutenberg's Most Translated Authors\",\n       x = NULL,\n       y = \"Number of languages\",\n       fill = \"Period active\",\n       caption = \"@jessimoore.bsky.social   Source: {gutenbergr}\") +\n  theme_wsj()+ \n  scale_fill_paletteer_d(\"Manu::Kereru\", direction = -1) +\n  theme(plot.margin = margin(30,40,30,30),\n        plot.title.position = \"plot\",\n        plot.title = element_text(size = 20, hjust = 0.5, vjust = 3),\n        axis.text = element_text(size = 14),\n        axis.title = element_text(size = 18),\n        legend.title = element_text(size = 14, face = \"bold\"),\n        plot.caption = element_text(size = 10, hjust = 0.5, vjust = -8),\n        plot.caption.position = \"plot\")"
  },
  {
    "objectID": "posts/tidy_tues/munros/munros.html",
    "href": "posts/tidy_tues/munros/munros.html",
    "title": "Tidy Tuesday: Scotland’s Munros",
    "section": "",
    "text": "For this week’s Tidy Tuesday, I explored whether there are differences in Munro classification and height distribution depending on how they are named.\nAt this point I do feel a bit like a fraud in calling my submissions ‘tidy’ as the code certainly is not. Although I am working on tidying up my charts, so maybe it still counts.\n\n\n\nCode\ntuesdata &lt;- tidytuesdayR::tt_load(2025, week = 33)\n\nscottish_munros &lt;- tuesdata$scottish_munros\n\nlibrary(tidyverse)\nlibrary(ggridges)\nlibrary(patchwork)\n\nmunros &lt;- scottish_munros %&gt;%\n  mutate(Type = case_when(\n    str_detect(Name, \"Stob\") ~ \"Stob\",\n    str_detect(Name, \"Meall|Mheall|Mill|Mhill\") ~ \"Meall\",\n    str_detect(Name, \"Sgurr|Sgorr|Sgor\") ~ \"Sgùrr\",\n    str_detect(Name, \"Carn|Cairn|Chairn|Chuirn\") ~ \"Càrn\",\n    str_detect(Name, \"Ben|Beinn|Bheinn\") ~ \"Beinn\"),\n    Type = factor(Type, levels = c(\"Meall\", \"Creag\", \"Sgùrr\", \"Beinn\", \"Càrn\", \"Stob\"))\n    ) %&gt;%\n  drop_na(Type) %&gt;%\n  group_by(Type)\n\nmeans &lt;- munros %&gt;%\n  summarise(height = mean(Height_m),\n            number = n())\n\nbg &lt;- \"#efe5dc\"\np &lt;- ggplot(munros, aes(Height_m, Type, fill = Type)) +\n  geom_density_ridges(scale = 1.5, rel_min_height = 0.005,\n                      quantile_lines = TRUE, quantile_fun = mean,\n                      vline_linetype = \"dashed\",\n                      aes(color = \"Mean height (m)\")) +\n  scale_y_discrete(expand = c(0.01, 0)) +\n  scale_x_continuous(expand = c(0.01, 0)) +\n  scale_color_manual(name = NULL, values = c(\"Mean height (m)\" = \"black\")) +\n  scale_fill_brewer(palette = 9) +\n  labs(x = \"Height (m)\", y = NULL) +\n  guides(fill = \"none\",\n         color = guide_legend(override.aes=list(fill=bg))) +\n  theme(legend.key.width = unit(0.5, \"cm\"),\n        legend.key.height = unit(1, \"cm\"),\n        legend.position = \"inside\",\n        legend.position.inside = c(0.8,0.09))\n\n# combination\n\nmunros_long &lt;- munros %&gt;%\n  pivot_longer(7:17, names_to = \"Year\", values_to = \"Classification\") %&gt;%\n  mutate(Year = as.integer(Year)) %&gt;%\n  drop_na(Classification)\n\np3 &lt;- ggplot(filter(munros_long, Year == 2021)) +\n  geom_bar(aes(x = Type, fill = Classification), colour = \"black\",\n           width = 0.5) +\n  labs(x = NULL, y = \"Number\") +\n  scale_fill_manual(values = tidyplots::colors_discrete_friendly_long) +\n  theme(axis.text.y = element_blank(),\n        legend.position = \"inside\",\n        legend.position.inside = c(0.85,0.8)) +\n  coord_flip()\n\ncombined_plot &lt;- p + p3 & theme(plot.margin = margin(40,10,10,10),\n                                plot.background = element_rect(fill = bg, color = bg),\n                                panel.background = element_rect(fill = bg, color = bg),\n                                legend.background = element_rect(fill = bg, color = bg),\n                                panel.grid = element_blank(),\n                                axis.ticks = element_blank(),\n                                axis.text = element_text(size = 12),\n                                axis.title.x = element_text(size = 14, hjust = 1),\n                                plot.title = element_text(face = \"bold\", size = 16, hjust = 0, vjust = 5),\n                                plot.title.position = \"plot\") &\n  plot_annotation(title = \"Scotland's Munros and Munro Tops\",\n                  subtitle = glue::glue(\"A Munro is a Scottish mountain and a Munro Top is a subsidiary summit of a Munro not considered a distinct mountain in its own right.\n                  The charts below show the height distributions (in metres) and the number of Munros and Munro Tops by commonly used Gaelic names.\n                  The most common name used to describe a Munro is Beinn (or Ben), meaning 'mountain' or 'peak'.\"),\n                  caption = \"Created by jessimoore@bsky.social for #TidyTuesday. Source: The Database of British and Irish Hills v18.2, www.hills-database.co.uk\")"
  },
  {
    "objectID": "posts/tidy_tues/tidy_tues.html",
    "href": "posts/tidy_tues/tidy_tues.html",
    "title": "Tidy Tuesday Posts",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Welcome 👋",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul, MN B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Welcome 👋",
    "section": "Experience",
    "text": "Experience\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "index.html#tidy-tuesday",
    "href": "index.html#tidy-tuesday",
    "title": "Welcome 👋",
    "section": "Tidy Tuesday",
    "text": "Tidy Tuesday\n\n\nHello and welcome!\n\n\n\n\n\nAbout me, my interests and experience, and my work as a Research Software Engineer.\n\n\nABOUT"
  },
  {
    "objectID": "tidy_tues.html",
    "href": "tidy_tues.html",
    "title": "Tidy Tuesday Posts",
    "section": "",
    "text": "Tidy Tuesday: Scotland’s Munros\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Project Gutenberg\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: D&D Monsters\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: 420 Data\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Pokemon\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Amazon’s Annual Reports\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Palm Trees\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Pixar Films\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Long Beach Animal Rescue\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Racial Disparities\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: FBI Crime Data API\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: CDC Datasets\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: The Simpsons\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday: Water Insecurity\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/chess_posts/chess1/2024-10-25-chess1.html",
    "href": "posts/chess_posts/chess1/2024-10-25-chess1.html",
    "title": "Proportion of Women in Chess",
    "section": "",
    "text": "I was interested in plotting the proportion of male and female chess players over time. The following plots were created using FIDE player data and therefore only show the trend in players who have an official FIDE standard rating.\n\nThe number of chess players registered with FIDE has more than tripled since 2012. Female players continue to make up about one in ten, a proportion that has not changed over the years.\nWhen filtering to only ‘active’ players – those who have played in a tournament in the previous 12 months - the proportion is similar. Interestingly, the impact of COVID-19 in 2020 also becomes apparent - a sudden decrease in the number of FIDE-active players which is then spikes back in 2021 (perhaps reflecting an influx of newer players who came to the game during pandemic lockdowns, or after the success of The Queen’s Gambit Netflix series?)\n\n\n\n\n\n\n\nClick to see proportion of active and inactive players\n\n\n\n\n\n\n\n\n\nI wondered if there might have been an increase in the number of girls competing over time - particularly in recent years. Comparing active females and males by age groups (below), we can see that around half of female chess players are under the age of 18, compared to around a quarter of males. This is unsurprising, and consistent with the understanding that girls tend to drop out of chess much sooner than boys.\n |\nBreaking this down further and looking only at active players under the age of 18, we can see that there has been a small increase in the number of girls playing (FIDE-rated) chess. However, the number of boys playing chess has also increased - and at a much faster rate - meaning that boys still outnumber girls by more than three to one.\n |\n\nRecommended reading:\nGender Differences: The Chess Delusion\nChecking Gender Bias: Parents and Mentors Perceive Less Chess Potential in Girls"
  },
  {
    "objectID": "posts/chess_posts/Chess Federations/chess-feds.html",
    "href": "posts/chess_posts/Chess Federations/chess-feds.html",
    "title": "Chess Federations",
    "section": "",
    "text": "I created this graphic as my final project for the Domestika course “Creative Data Visualization for Narrative Designs” by Federica Fragapane. I created bubble plots and violin plots in R, which I combined and edited for the final visualisation using Inkscape."
  },
  {
    "objectID": "posts/chess_posts/tableau-chess/2025-02-19-tableau-chess.html",
    "href": "posts/chess_posts/tableau-chess/2025-02-19-tableau-chess.html",
    "title": "Tableau Chess Dashboard",
    "section": "",
    "text": "One of my first finished Tableau visualisations can be viewed here (best viewed on a large screen). I am finding the FIDE chess player data to be a really great source for data exploration, so I looked at another (more traditional) way to visualise the chess federations - as opposed to my creative visualisation here.\nI wanted to do a lot more with this; specifically, I wanted to animate it by date to show the change over time. This was easy enough to achieve, however, achieving the dynamic sorting (from most to least, changing by year) of the bar charts was not so easy, and something I’ll have to play around with a little more."
  },
  {
    "objectID": "chess_posts.html",
    "href": "chess_posts.html",
    "title": "Chess Posts",
    "section": "",
    "text": "Tableau Chess Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\nChess Federations\n\n\n\n\n\n\n\n\n\n\n\n\n\nProportion of Women in Chess\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/chess_posts/tableau-chess/chess_tableau.html",
    "href": "posts/chess_posts/tableau-chess/chess_tableau.html",
    "title": "Tableau Chess Dashboard",
    "section": "",
    "text": "One of my first finished Tableau visualisations can be viewed here (best viewed on a large screen). I am finding the FIDE chess player data to be a really great source for data exploration, so I looked at another (more traditional) way to visualise the chess federations - as opposed to my creative visualisation here.\nI wanted to do a lot more with this; specifically, I wanted to animate it by date to show the change over time. This was easy enough to achieve, however, achieving the dynamic sorting (from most to least, changing by year) of the bar charts was not so easy, and something I’ll have to play around with a little more."
  }
]