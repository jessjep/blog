{
  "hash": "e0cc8af04486ae7d33cbd6e8b90e8db1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy Tuesday: Palm Trees\"\ndate: 2025-03-19\nexecute:\n  echo: true\n  warning: false\n  message: false\nimage: \"palms.png\"\ntags: \n  - tidytuesday\n---\n\n\n\nWeek 11 of Tidy Tuesday used data from the {palmtrees} package. Such an interesting dataset with so many options to explore.\n\nI find dendrograms confusing, so I followed this helpful post to help me create it: <https://paulapivat.com/technical_notes/example_tech/data_viz_tip1/>.\n\n![](palms.png){style=\"margin:auto;\"}\n\n### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Load Data and Libraries\"}\npalmtrees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-03-18/palmtrees.csv')\n\nlibrary(tidyverse)\nlibrary(igraph)\nlibrary(tidygraph)\nlibrary(ggraph)\nlibrary(ggtext)\nlibrary(sysfonts)\nlibrary(showtext)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Wrangle the Data\"}\n# turn the data into a format suitable for dendrograms #\npalms <- palmtrees %>%\n  group_by(palm_subfamily) %>%\n  arrange(palm_subfamily) %>%\n  mutate(level1 = \"palmcenter\",\n         level2 = palm_subfamily,\n         level3 = palm_tribe,\n         level4 = spec_name) %>%\n  ungroup() %>%\n  select(level1:level4)\n\n# create the edges #\npalms_edges_1_2 <- palms %>%\n  select(level1, level2) %>%\n  unique() %>%\n  rename(from = level1, to = level2) %>%\n  mutate(subfam = to) # adding this column for colour grouping\n\npalms_edges_2_3 <- palms %>%\n  select(level2, level3) %>%\n  unique() %>%\n  rename(from = level2, to = level3) %>%\n  mutate(subfam = from) # adding this column for colour grouping\n\npalms_edges_3_4 <- palms %>%\n  select(level2, level3, level4) %>%\n  unique() %>%\n  rename(from = level3, to = level4) %>%\n  mutate(subfam = level2) %>% # adding this column for colour grouping\n  select(-level2) \n\nedge_list <- rbind(palms_edges_1_2, palms_edges_2_3, palms_edges_3_4)\n\npalms_plot <- graph_from_data_frame(edge_list) %>%\n  as_tbl_graph()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Define Fonts, Text, and Colours\"}\nfont_add_google(\"Milonga\", \"milonga\")\nfont_add_google(\"Kurale\", \"kurale\")\nft <- \"milonga\"\nft2 <- \"kurale\"\nshowtext_auto()\n\ntitle <- \"Palm Trees\"\nsubtitle <- \"Over 2,500 species of palms exist worldwide, categorized into 29 tribes across\n5 subfamilies: <span style = 'color: #04724d;'>**Arecoideae**</span>, <span style = 'color: #74a57f;'>**Calamoideae**</span>, <span style = 'color: #06AD81;'>**Ceroxyloideae**</span>, <span style = 'color: #4c934c;'>**Coryphoideae**</span>, and <span style = 'color: #b7ce63;'>**Nypoideae**</span>.\\n\nIn this diagram, the leaves are made up of thousands of lines, each representing a species of palm.\nEach leaf represents a palm tribe, and each colour a subfamily.\"\ncaption <- \"Created by: jessimoore.bsky.social   Source: {palmtrees}\"\n\nc <- c(\"#04724d\", \"#74a57f\", \"#06AD81\",\n       \"#4c934c\", \"#b7ce63\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Create the Plot\"}\npalmtree <- ggraph(palms_plot, layout = \"dendrogram\", circular = TRUE) +\n  geom_edge_arc(aes(width = after_stat(index), edge_colour = subfam)) +\n  scale_edge_color_manual(values = c) +\n  scale_edge_width(range = c(1,0.2)) +\n  theme_void() +\n  labs(title = title, subtitle = subtitle, caption = caption) +\n  theme(panel.background = element_rect(fill = \"#d7fff1\", color = NA),\n        plot.background = element_rect(fill = \"#d7fff1\", color = NA),\n        plot.title = element_text(family = ft, size = 34, hjust = 0.5),\n        plot.subtitle = element_textbox_simple(family = ft2, size = 10, \n                                               hjust = 0.5, halign = 0.5,\n                                               margin = margin(15,0,0,0)),\n        plot.caption = element_text(family = ft2, size = 8, hjust = 0.5),\n        plot.caption.position = \"plot\",\n        legend.position = \"none\",\n        plot.margin = margin(20,20,20,20))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}