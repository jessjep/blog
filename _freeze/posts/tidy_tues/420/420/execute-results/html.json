{
  "hash": "d096d7905cf5547cdca29150eb863a7d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy Tuesday: 420 Data\"\ndate: 2025-04-21\nexecute:\n  echo: true\n  warning: false\n  message: false\nimage: \"fatalities.png\"\ntags: \n  - tidytuesday\n---\n\n\n\nWeek 16 of Tidy Tuesday looks at data on fatal car accidents in the USA and whether more deaths occur on 20th of April (the 420 Cannabis holiday). I made a line plot showing the change in number of fatalities over time, and decided to emphasise the seasonality by adding a colour gradient to the trend line.\n\n![](fatalities.png){fig-alt=\"Line plot showing the seasonal change in car accident fatalities in the USA from 1992 to 2017. There is a clear trend of more fatalities in the warmer months. Over the years, there was a slight reduction in fatalities from around 2007 to 2011, followed by a gradual increase back to near-1995 levels.\"}\n\nI discovered that geom_smooth() does not support gradients, but you can get around this by manually creating the loess (locally estimated scatterplot smoothing) using `l <- loess(fatalities_count ~ as.numeric(date), data = daily_accidents, span = 0.02)`. This can be added as a variable in the data frame using `mutate(smooth = predict(l))` and then plotted as a normal geom_line() in ggplot2.\n\nTo change the colour of the line, I specified `geom_line(aes(y = smooth, color = months, group = 1))`. Having `group = 1` tells ggplot2 that I only want one line with multiple colours, rather than multiple lines each with their own colour. Then, `scale_color_gradientn()` is used to add the colours.\n\nThe full code is below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntuesdata <- tidytuesdayR::tt_load(2025, week = 16)\ndaily_accidents <- tuesdata$daily_accidents\ndaily_accidents_420 <- tuesdata$daily_accidents_420\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\nl <- loess(fatalities_count ~ as.numeric(date), data = daily_accidents, span = 0.02)\n\naccidents2 <- daily_accidents %>%\n  mutate(smooth = predict(l),\n         months = lubridate::month(date)) %>%\n  arrange(date)\n\nt <- \"Car Accident Fatalities in the USA: 1992â€“2017\"\nst <- glue::glue(\"The grey line shows the daily number of fatalities, with the most deaths occuring on 3 November 2007, and the fewest on 2 February 2011.\n                 The trend is displayed as a gradient-colored line showing the seasonality of fatal car crashes.\")\ncptn <- \"Created by: jessimoore.bsky.social    Source: 420 Data, Harper & Palayew (2018)\"\n\np2 <- ggplot(accidents2, \n             aes(x = date)) +\n  geom_line(aes(y = fatalities_count),\n            alpha = 0.2, linetype = \"dotted\",\n            color = \"grey40\") +\n  geom_line(aes(y = smooth, \n                color = months,\n                group = 1), \n            linewidth = 1.5) +\n  scale_color_gradientn(colors = c(\"#90caf9\",\"#f3722c\",\"#ffc400\",\"#90be6d\", \"#90caf9\"),\n                        values = scales::rescale(c(1,3.5,6,9,12)),\n                        labels = c(\"January\", \"March\", \"June\", \"September\", \"December\"),\n                        transform = \"reverse\") +\n  scale_x_date(date_breaks = \"3 years\", date_minor_breaks = \"6 months\",\n               date_labels = \"%Y\") +\n  labs(x = NULL, y = \"Fatalities\",\n       color = NULL,\n       title = t, subtitle = st, caption = cptn) +\n  theme_minimal() +\n  theme(panel.grid = element_line(linewidth = 0.15),\n        panel.grid.major.x = element_line(linewidth = 0.2, \n                                          color = \"grey60\"),\n        plot.margin = margin(30,30,30,30),\n        plot.caption = element_text(size = 8, hjust = 0.5, vjust = -15),\n        plot.caption.position = \"plot\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}