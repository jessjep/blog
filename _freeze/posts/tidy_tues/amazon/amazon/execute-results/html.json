{
  "hash": "be5362a3f6f6797dbf6161e70634f0b4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy Tuesday: Amazon's Annual Reports\"\ndate: 2025-03-27\nexecute:\n  echo: true\n  warning: false\n  message: false\nimage: \"amazon.png\"\ntags: \n  - tidytuesday\n---\n\n\n\nThis week's data was curated by [Gregory Vander Vinne](/Users/jess.moore/Documents/GitHub/tidytuesday/2025/25-03-25/amazon.png). I used the lead() function from dplyr to look at the 'next' word and create and investigate trigrams, rather than single words.\n\n\"Stock based compensation\" was by far the most common trigram. However, it has been mentioned less and less since 2015.\n\n![](amazon.png)\n\n#### Code:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Load Data and Libraries\"}\ntuesdata <- tidytuesdayR::tt_load(2025, week = 12)\nreport_words_clean <- tuesdata$report_words_clean\n\nlibrary(tidytext)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(sysfonts)\nlibrary(showtext)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Reverse Engineer Trigrams and Look at the Most Common\"}\ntrigrams <- report_words_clean %>%\n  mutate(word2 = lead(word),\n         word3 = lead(word2))\n\n# common trigrams #\ntri <- trigrams %>%\n  filter(!(word == word2),\n         !(word2 == word3),\n         !(word == word3)) %>%\n  unite(trigram, c(\"word\", \"word2\", \"word3\"), sep = \" \") %>%\n  group_by(year) %>%\n  count(trigram, sort = TRUE) %>%\n  slice_max(n, n = 10) \n# this reveals \"stock based compensation\" and \"foreign exchange rates\" as common trigrams\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Prepare for Plotting\"}\ntri_graph <- trigrams %>%\n  group_by(year) %>%\n  unite(trigram, c(\"word\", \"word2\", \"word3\"), sep = \" \") %>%\n  mutate(total_trigrams = n()) %>%\n  filter(trigram %in% c(\"stock based compensation\", \"foreign exchange rates\")) %>%\n  count(year, total_trigrams, trigram) %>%\n  mutate(relative_freq = n/total_trigrams*100)\n\n# fonts and text #\nt <- \"Term Frequency in Amazon's Annual Reports\"\nst <- \"The graph shows the relative term frequency of the trigrams 'stock based compensation' and 'foreign exchange rates' in Amazon's Annual Reports. \nThis is is expressed as a percentage of the total number of trigrams in each report. Mentions of 'stock based compensation' have declined significantly \nsince 2005. Meanwhile, mentions of 'foreign exchange rates' have been rising.\"\ncptn <- \"Created by: jessimoore.bsky.social    Source: Amazon's Annual Reports\"\n\nfont_add_google(\"Roboto\", \"robo\")\nft <- \"robo\"\nshowtext_auto()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Create the Plot\"}\nplot <- ggplot(tri_graph, aes(x = year, y = relative_freq, color = trigram)) +\n  geom_line(size = 1.5) +\n  annotate(\"text\", x = 2016, y = 0.25, label = '\"stock based compensation\"', \n            color = \"#4e598c\", fontface = \"bold\", family = ft, angle = -30) +\n  annotate(\"text\", x = 2006.2, y = 0.297, label = \"68 mentions\", \n           color = \"#4e598c\", family = ft) +\n  annotate(\"text\", x = 2022, y = 0.07, label = \"19 mentions\", \n           color = \"#4e598c\", family = ft) +\n  annotate(\"text\", x = 2014, y = 0.107, label = '\"foreign exchange rates\"',\n            color = \"#f9c784\", fontface = \"bold\", family = ft, angle = 42) +\n  annotate(\"text\", x = 2006, y = 0.03, label = \"5 mentions\", \n           color = \"#f9c784\", family = ft) +\n  annotate(\"text\", x = 2022, y = 0.128, label = \"31 mentions\", \n           color = \"#f9c784\", family = ft) +\n  labs(title = t, subtitle = st, caption = cptn,\n       x = NULL, y = \"%\") +\n  scale_color_manual(values = c(\"#f9c784\", \"#4e598c\")) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        panel.grid = element_blank(),\n        axis.text = element_text(family = ft, size = 10),\n        axis.title.y = element_text(family = ft, size = 18,\n                                    angle = 0, vjust = 0.5),\n        plot.title = element_text(family = ft, size = 25, hjust = 0.5),\n        plot.subtitle = element_text(family = ft, size = 10, hjust = 0.5,\n                                     margin = margin(10,0,20,0)),\n        plot.caption = element_text(family = ft, size = 8, \n                                    hjust = 0.5, vjust = -15),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(30,30,40,30))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}