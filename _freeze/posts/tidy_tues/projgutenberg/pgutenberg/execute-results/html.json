{
  "hash": "10603d2ab992002c7d62a5bcd0a79345",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy Tuesday: Project Gutenberg\"\ndate: 2025-06-07\nexecute:\n  echo: true\n  warning: false\n  message: false\nimage: \"p3.png\"\ntags: \n  - tidytuesday\n---\n\n\n\nTidy Tuesday week 22 - quick bar plot this week. Project Gutenberg is a free ebook library of many classic novels and works of literature. I chose to look at the authors with works in the most languages (the top 25 are shown in the plot).\n\nI used the Wall Street Journal theme from {ggthemes} and the Manu::Kereru palette from {paletteer}. While I really love customising fonts and colours myself, it sure does save time to use some premade themes. I also used AI to help rearrange the first and surnames of the authors (i.e. from \"Shakespeare, William\" to \"William Shakespeare\"). I don't typically like to use AI as I think it interferes with learning and retaining knowledge, but sometimes it's simply faster.\n\n![](p3.png)\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code\"}\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(paletteer)\n\ntuesdata <- tidytuesdayR::tt_load(2025, week = 22)\n\ngutenberg_authors <- tuesdata$gutenberg_authors %>%\n  arrange(author, birthdate) %>%\n  distinct(author, .keep_all = TRUE)\ngutenberg_languages <- tuesdata$gutenberg_languages\ngutenberg_metadata <- tuesdata$gutenberg_metadata\ngutenberg_subjects <- tuesdata$gutenberg_subjects\n\n# number of distinct languages per author #\n\ntranslated <- gutenberg_metadata %>%\n  distinct(author, language) %>%\n  count(author) %>%\n  filter(!(author %in% c(NA, \"Anonymous\", \"Various\", \"Unknown\"))) %>%\n  slice_max(order_by = n, n = 20)\n\nt <- translated %>%\n  left_join(gutenberg_authors %>%\n            select(author, birthdate, deathdate),\n    by = \"author\") %>%\n  separate(author, into = c(\"surname\", \"firstname\"), \n           sep = \",\", fill = \"right\") %>%\n  mutate(firstname = str_trim(firstname),\n         surname = str_trim(surname),\n         author = if_else(is.na(firstname), surname, \n                          paste(firstname, surname))) %>%\n  mutate(birthdate = if_else(author == \"Daniel Defoe\", 1660, birthdate),\n    deathdate = if_else(author == \"Daniel Defoe\", 1731, deathdate)) %>%\n  select(-c(firstname, surname)) %>%\n  mutate(active = (deathdate + birthdate)/2,\n    century = factor(case_when(\n      is.na(active) ~ \"Unknown\",\n      TRUE ~ paste0((birthdate %/% 100 + 1), \"th century\"))),\n      author = fct_reorder(factor(author), n)) %>%\n  mutate(century = if_else(author == \"Homer\", \"8th century BCE\", century))\n\n# plot #\n\np <- ggplot(t, aes(author, n, fill = century)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(title = \"Project Gutenberg's Most Translated Authors\",\n       x = NULL,\n       y = \"Number of languages\",\n       fill = \"Period active\",\n       caption = \"@jessimoore.bsky.social   Source: {gutenbergr}\") +\n  theme_wsj()+ \n  scale_fill_paletteer_d(\"Manu::Kereru\", direction = -1) +\n  theme(plot.margin = margin(30,40,30,30),\n        plot.title.position = \"plot\",\n        plot.title = element_text(size = 20, hjust = 0.5, vjust = 3),\n        axis.text = element_text(size = 14),\n        axis.title = element_text(size = 18),\n        legend.title = element_text(size = 14, face = \"bold\"),\n        plot.caption = element_text(size = 10, hjust = 0.5, vjust = -8),\n        plot.caption.position = \"plot\")\n```\n:::\n",
    "supporting": [
      "pgutenberg_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}