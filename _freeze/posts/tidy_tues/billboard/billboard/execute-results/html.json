{
  "hash": "a4e12af1dc387b5cdc86d08923d8e3a9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy Tuesday: Billboard Hot 100 #1s\"\ndate: 2025-08-31\nexecute:\n  echo: true\n  warning: false\n  message: false\nimage: \"billboard 1.png\"\ntags: \n  - tidytuesday\n---\n\n\n\nThis week's TT dataset came from [Billboard Hot 100 Number Ones Database](https://docs.google.com/spreadsheets/d/1j1AUgtMnjpFTz54UdXgCKZ1i4bNxFjf01ImJ-BqBEt0/edit?gid=1974823090#gid=1974823090). With such a rich dataset and so many variables it was difficult to know where to even begin. I tried out a few options before settling on exploring gender of songwriters and artists over time.\n\nI edited the final combined plot using Figma, which made customising the text much easier.\n\n![](billboard%201.png)\n\n### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Load data and libraries\"}\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(paletteer)\nlibrary(ggstream)\nlibrary(sysfonts)\nlibrary(showtext)\n\ntuesdata <- tidytuesdayR::tt_load('2025-08-26')\nbillboard <- tuesdata$billboard %>% \n  drop_na(songwriter_male)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Wrangle data for plot 1\"}\nb <- billboard %>%\n  mutate(year = 10 * (year(as.Date(date)) %/% 10),\n         songwriter_male = factor(case_when(\n           songwriter_male == 0 ~ \"Female\",\n           songwriter_male == 1 ~ \"Male\",\n           songwriter_male == 2 ~ \"Female/Male Mix\",\n           songwriter_male ==3 ~ \"Female/Male/Non-Binary Mix\"))) %>%\n  # removing 2025 as there is only one song in dataset\n  filter(year != 2025) %>%\n  count(year, songwriter_male)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Define aesthetics\"}\npal <- c(\"#8C6BB3\", \"#D27A9C\", \"#E8C153\", \"#5BA4BF\")\nbg <- \"#F4F4ED\"\nfont_add_google(\"Josefin sans\", \"josefin\")\nft <- \"josefin\"\nshowtext_auto()\n\ntheme <- theme(panel.grid = element_blank(),\n        plot.background = element_rect(fill = bg, color = bg))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Create plot 1\"}\np <- ggplot(b,\n            aes(year, n, fill = songwriter_male))+\n  geom_col(position = \"fill\", width = 10) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_manual(values = pal) +\n  scale_x_continuous(\n    breaks = seq(1950,2020, \n                 by = 10)) +\n  labs(x = NULL, y = NULL, fill = \"Gender of Songwriting Team\") +\n  theme_minimal() +\n    theme(axis.text = element_text(family = ft, size = 12, face = \"bold\"),\n        legend.title = element_text(family = ft, size = 12, face = \"bold\"),\n        legend.text = element_text(family = ft, size = 12)) +\n  theme\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Wrangle data for plot 2\"}\nb2 <- billboard %>%\n  mutate(year = 10 * (year(as.Date(date)) %/% 10),\n         artist_male = factor(case_when(\n           artist_male == 0 ~ \"Female\",\n           artist_male == 1 ~ \"Male\",\n           artist_male == 2 ~ \"Female/Male Mix\",\n           artist_male ==3 ~ \"Female/Male/Non-Binary Mix\"))) %>%\n  # removing 2025 as there is only one song in dataset\n  filter(year != 2025) %>%\n  count(year, artist_male)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Create plot 2\"}\np2 <- ggplot(b2,\n            aes(year, n, fill = artist_male))+\n  geom_col(position = \"fill\", width = 10) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_x_continuous(\n    breaks = seq(1950, 2020,\n                 by = 10)) +\n  scale_fill_manual(values = pal) +\n  labs(x = NULL, y = NULL, fill = \"Gender of Songwriting Team\") +\n  theme_minimal() +\n    theme(axis.text = element_text(family = ft, size = 12, face = \"bold\"),\n        legend.title = element_text(family = ft, size = 12, face = \"bold\"),\n        legend.text = element_text(family = ft, size = 12)) +\n  theme\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Combine plots\"}\n# Create the titles\nt1 <- \n  ggplot() +\n  theme_void() +\n  geom_text(aes(x = 0, y = 0), label = \"Who writes hit songs?\", family = ft, size = 8, lineheight = .5, fontface = 'bold') +\n  theme(axis.text = element_blank())\n\nt2 <- \n  ggplot() +\n  theme_void() +\n  geom_text(aes(x = 0, y = 0), label = \"Who performs them?\", family = ft, size = 8, lineheight = .5, fontface = 'bold')  +\n  theme(axis.text = element_blank())\n\n# Design patchwork layout\nlayout <- c(\n  area(1,1,3,1), #p1\n  area(1,2,1,2), #t1\n  area(2,2,2,2), #legend\n  area(3,2,3,2), #t2\n  area(1,3,3,3) #p2\n)\n\ncombined_plot <- p + t1 + guide_area() + t2 + p2 + \n  plot_layout(design = layout, guides = \"collect\") &\n  theme\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}